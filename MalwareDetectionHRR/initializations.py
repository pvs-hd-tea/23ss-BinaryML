import sys
import datetime

TRAIN_DATA_PATH_GOOD = ''
TRAIN_DATA_PATH_BAD = ''

VALIDATION_DATA_PATH_GOOD = ''
VALIDATION_DATA_PATH_BAD = ''

TEST_DATA_PATH_GOOD = ''
TEST_DATA_PATH_BAD = ''

WEIGHTS_BASE_PATH = ''


def printf(message):
    timestamp = datetime.datetime.now()
    timestamp_str = timestamp.strftime("%Y-%m-%d %H:%M:%S")
    print(f"[{timestamp_str}] {message}")


def initialize_paths():
    global TRAIN_DATA_PATH_GOOD, TRAIN_DATA_PATH_BAD, VALIDATION_DATA_PATH_GOOD, VALIDATION_DATA_PATH_BAD
    global TEST_DATA_PATH_GOOD, TEST_DATA_PATH_BAD, WEIGHTS_BASE_PATH

    if MALWARE:
        printf(f"HRR Malware detection model")
        TRAIN_DATA_PATH_GOOD = MALWARE_TRAIN_DATA_GOOD_PATH
        TRAIN_DATA_PATH_BAD = MALWARE_TRAIN_DATA_BAD_PATH

        VALIDATION_DATA_PATH_GOOD = MALWARE_VALIDATION_DATA_GOOD_PATH
        VALIDATION_DATA_PATH_BAD = MALWARE_VALIDATION_DATA_BAD_PATH

        TEST_DATA_PATH_GOOD = MALWARE_TEST_DATA_GOOD_PATH
        TEST_DATA_PATH_BAD = MALWARE_TEST_DATA_BAD_PATH
        WEIGHTS_BASE_PATH = MALWARE_WEIGHTS_BASE_PATH

    else:
        printf(f"HRR Vulnerability detection model")
        TRAIN_DATA_PATH_GOOD = VULN_TRAIN_DATA_GOOD_PATH
        TRAIN_DATA_PATH_BAD = VULN_TRAIN_DATA_BAD_PATH

        VALIDATION_DATA_PATH_GOOD = VULN_VALIDATION_DATA_GOOD_PATH
        VALIDATION_DATA_PATH_BAD = VULN_VALIDATION_DATA_BAD_PATH

        TEST_DATA_PATH_GOOD = VULN_TEST_DATA_GOOD_PATH
        TEST_DATA_PATH_BAD = VULN_TEST_DATA_BAD_PATH
        WEIGHTS_BASE_PATH = VULN_WEIGHTS_BASE_PATH


VULN_TRAIN_DATA_GOOD_PATH = './VulnDataSet/Train/good/'
VULN_TRAIN_DATA_BAD_PATH = './VulnDataSet/Train/bad/'

VULN_TEST_DATA_GOOD_PATH = './VulnDataSet/Test/good/'
VULN_TEST_DATA_BAD_PATH = './VulnDataSet/Test/bad/'

VULN_VALIDATION_DATA_GOOD_PATH = './VulnDataSet/Validation/good/'
VULN_VALIDATION_DATA_BAD_PATH = './VulnDataSet/Validation/bad/'

VULN_WEIGHTS_BASE_PATH = 'weights/vulnerability_dataset/training/weights_vuln/'

MALWARE_TRAIN_DATA_GOOD_PATH = './MalwareDataSet/Train/good/'
MALWARE_TRAIN_DATA_BAD_PATH = './MalwareDataSet/Train/bad/'

MALWARE_TEST_DATA_GOOD_PATH = './MalwareDataSet/Test/good/'
MALWARE_TEST_DATA_BAD_PATH = './MalwareDataSet/Test/bad/'

MALWARE_VALIDATION_DATA_GOOD_PATH = './MalwareDataSet/Validation/good/'
MALWARE_VALIDATION_DATA_BAD_PATH = './MalwareDataSet/Validation/bad/'

MALWARE_WEIGHTS_BASE_PATH = 'weights/malware_dataset/training/weights_mal/'


MALWARE = False
VULNERABILITY = False

if len(sys.argv) <= 1:
    printf("No argument passed. Either 'malware' or 'vulnerability' should be passed as the 1st argument")
    exit(1)
if sys.argv[1] == 'malware':
    MALWARE = True
elif sys.argv[1] == 'vulnerability':
    VULNERABILITY = True
else:
    printf("Invalid argument. Only 'malware' or 'vulnerability' should be passed as the 1st argument")
    exit(1)

initialize_paths()

TRAIN = False
TEST = False
PREDICT = False
if len(sys.argv) <= 2:
    printf("No argument passed. Either 'train' or 'test' should be passed as the 2nd argument")
    exit(1)
if sys.argv[2] == 'train':
    TRAIN = True
elif sys.argv[2] == 'test':
    TEST = True
elif sys.argv[2] == 'predict':
    PREDICT = True
else:
    printf("Invalid argument. Only 'train' or 'test' can be passed as the 2nd argument")
    exit(1)

SMOKE_TEST = False

if len(sys.argv) == 4:
    if sys.argv[3] == 'smoke-test':
        SMOKE_TEST = True